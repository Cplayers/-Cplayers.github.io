{"version":3,"file":"static/js/space.3066bec9.chunk.js","mappings":"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","sources":["views/PersonSpace/CloudPage/index.jsx","views/PersonSpace/HistoryPage/index.jsx","views/PersonSpace/LoginQR/index.jsx","views/PersonSpace/SearchPage/SearchInput.jsx","views/PersonSpace/SearchPage/HistoryPanel.jsx","components/common/ImageLazy/index.jsx","components/SongsDisplay/index.jsx","views/PersonSpace/SearchPage/SearchResult.jsx","views/PersonSpace/SearchPage/index.jsx","hooks/useSearchHandler.js","views/PersonSpace/SettingsPage/index.jsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nimport { pageVariant } from '@/variants'\n\nconst CloudPage = () => {\n  return (\n    <CloudPageWrapper\n      variants={pageVariant}\n      initial=\"enter\"\n      animate=\"show\"\n      transition=\"transition\"\n      exit=\"exit\"\n      key=\"historyPage\"\n    >\n      暂未开发，敬请期待\n    </CloudPageWrapper>\n  )\n}\n\nconst CloudPageWrapper = styled(motion.div)`\n  width: 95%;\n  margin: 0 auto;\n  text-align: center;\n  line-height: calc(100vh - 164px);\n`\n\nexport default CloudPage\n","import { motion } from 'framer-motion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { pageVariant } from '@/variants'\n\nconst HostoryPage = () => {\n  return (\n    <HistoryPageWrapper\n    variants={pageVariant}\n    initial=\"enter\"\n    animate=\"show\"\n    transition=\"transition\"\n    exit=\"exit\"\n      key=\"historyPage\"\n    >\n      暂未开发，敬请期待\n    </HistoryPageWrapper>\n  )\n}\n\nconst HistoryPageWrapper = styled(motion.div)`\n  width: 95%;\n  margin: 0 auto;\n  text-align: center;\n  line-height: calc(100vh - 164px);\n`\n\nexport default HostoryPage\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport styled, { keyframes } from 'styled-components'\n\nimport Icon from '@/components/common/IconSvg'\nimport { createQrKey, checkQrCode, getUserInfo } from '@/store/user.slice'\n\nconst LoginQR = React.memo(() => {\n  const { key, qrimg, verify } = useSelector((state) => state.user)\n  const { code } = verify\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  // 1. 挂载：获取 key 和 qrimg\n  useEffect(() => {\n    dispatch(createQrKey())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  // 2. 监听 key 的失效，设置 130 秒，每 4 秒检测一次\n  const checkRef = useRef(0)\n  const [hintFresh, setHintFresh] = useState(false)\n  const setCycleCheck = useCallback(\n    (key, interval = 4000, duration = 130000) => {\n      let lock = false\n      const id = setInterval(() => {\n        dispatch(checkQrCode(key)).then(({ payload }) => {\n          let { cookie } = payload\n          if (cookie !== '' && !lock) {\n            lock = true\n            dispatch(getUserInfo())\n          }\n        })\n      }, interval)\n      setTimeout(() => {\n        setHintFresh(true)\n        clearInterval(id)\n      }, duration)\n      return id\n    },\n    [dispatch]\n  )\n  useEffect(() => {\n    if (key !== '') {\n      checkRef.current = setCycleCheck(key)\n    }\n    return () => {\n      clearInterval(checkRef.current)\n    }\n  }, [key, setCycleCheck])\n  useEffect(() => {\n    if (code === 1) {\n      // 2.1 成功，跳转到 /space\n      clearInterval(checkRef.current)\n      navigate('/space')\n    } else if (code === 2) {\n      // 2.2 失效，提示刷新\n      setHintFresh(true)\n    }\n  }, [code, navigate, dispatch])\n  // 处理 key 刷新\n  const refreshQrKey = () => {\n    dispatch(createQrKey()).then(() => {\n      setHintFresh(false)\n    })\n  }\n  return (\n    <LoginQRWrapper>\n      <div className=\"qr_box\">\n        <div className=\"qr_contain\">\n          {hintFresh && (\n            <div className=\"refresh_hint\">\n              <p onClick={refreshQrKey}>二维码已失效，请点击刷新</p>\n            </div>\n          )}\n          <div className=\"qr_img\">\n            {qrimg === '' ? (\n              <>\n                <LoadingQR />\n                <Icon name=\"qr\" />\n              </>\n            ) : (\n              <img\n                src={qrimg}\n                alt=\"二维码\"\n              />\n            )}\n          </div>\n        </div>\n        <div className=\"scan_hint\">\n          请使用<b> 网易云App </b>扫描二维码登录\n        </div>\n      </div>\n    </LoginQRWrapper>\n  )\n})\n\nconst LoginQRWrapper = styled.div`\n  width: 100%;\n  height: calc(100vh - 144px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  .qr_contain {\n    position: relative;\n    width: 200px;\n    height: 200px;\n    overflow: hidden;\n    border: 1px solid var(--bg-gray-100);\n    border-radius: 10px;\n  }\n  .refresh_hint {\n    width: inherit;\n    height: inherit;\n    position: absolute;\n    background: var(--bg-black-150);\n    cursor: pointer;\n    p {\n      color: var(--font-white-100);\n      font-size: 14px;\n      font-weight: bold;\n      text-align: center;\n      line-height: 200px;\n    }\n  }\n  .qr_img {\n    width: 100%;\n    height: 100%;\n    img {\n      width: inherit;\n      height: inherit;\n    }\n    .icon {\n      fill: var(--bg-black-110);\n      width: inherit;\n      height: inherit;\n    }\n  }\n  .scan_hint {\n    font-size: 12px;\n    color: var(--font-gray-200);\n    text-align: center;\n    margin-top: 10px;\n    b {\n      color: var(--font-red-100);\n      font-weight: bold;\n    }\n  }\n`\nconst circle = keyframes`\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst LoadingQR = styled.div`\n  position: absolute;\n  top: calc(50% - 20px);\n  left: calc(50% - 20px);\n  width: 40px;\n  height: 40px;\n  border: 4px solid #000;\n  border-top-color: rgba(0, 0, 0, 0.2);\n  border-right-color: rgba(0, 0, 0, 0.2);\n  border-bottom-color: rgba(0, 0, 0, 0.2);\n  border-radius: 100%;\n  animation: ${circle} infinite 0.75s linear;\n`\n\nexport default LoginQR\n","import React, { useRef } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useKeyPress } from 'ahooks'\n\nimport Icon from '@/components/common/IconSvg'\n\nconst SearchInput = React.memo(({ searchHandler }) => {\n  const [searchParams] = useSearchParams()\n  const keywordsRef = useRef()\n  // 事件绑定：搜索框的回车事件，通过useKeyPress绑定\n  useKeyPress(\n    'enter',\n    () => {\n      searchHandler(keywordsRef.current.value)\n    },\n    { target: keywordsRef }\n  )\n  return (\n    <SearchInputWrapper>\n      <div className=\"searchbox\">\n        {/* 搜索图标 */}\n        <div\n          className=\"search_btn\"\n          onClick={() => searchHandler(keywordsRef.current.value)}\n        >\n          <Icon name=\"search\" />\n        </div>\n        {/* 搜索框 */}\n        <input\n          className=\"search_input\"\n          type=\"text\"\n          maxLength=\"100\"\n          placeholder=\"搜索音乐...\"\n          defaultValue={searchParams.get('keywords') || ''}\n          ref={keywordsRef}\n        />\n        {/* 清除操作图标 */}\n        <div className=\"search_clean\">\n          <Icon name=\"clean\" />\n        </div>\n      </div>\n    </SearchInputWrapper>\n  )\n})\n\nconst SearchInputWrapper = styled.div`\n  box-sizing: border-box;\n  padding: 15px 0;\n  border-bottom: 1px solid var(--bg-gray-100);\n  background-color: var(--bg-white-100);\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  .searchbox {\n    width: min(670px, 100%);\n    height: 46px;\n    display: flex;\n    box-shadow: 0 0 0 1px rgb(0 0 0 / 5%), 0 2px 4px 1px rgb(0 0 0 / 9%);\n    border-radius: 26px;\n    &:hover {\n      box-shadow: 0 0 0 1px rgb(0 0 0 / 10%), 0 2px 4px 1px rgb(0 0 0 / 18%);\n    }\n  }\n  .search_input {\n    flex: 1;\n    font-size: 16px;\n    color: var(--font-gray-200);\n  }\n  .search_btn svg,\n  .search_clean svg {\n    width: 30px;\n    height: 30px;\n    margin: 8px 10px;\n    border-radius: 50%;\n    fill: var(--bg-gray-100);\n    cursor: pointer;\n  }\n  .search_clean svg {\n    width: 20px;\n    margin: 8px 16px;\n  }\n  .search_clean {\n    /* visibility: ${({ clean }) => (clean ? 'visible' : 'hidden')}; */\n    visibility: hidden;\n  }\n`\n\nexport default SearchInput\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { clearHistory } from '@/store/search.slice'\nimport Icon from '@/components/common/IconSvg'\n\nconst HistoryPanel = React.memo(({ searchHandler }) => {\n  const { history } = useSelector((state) => state.search)\n  const dispatch = useDispatch()\n  // 4. 通过历史记录跳转到详情页\n  const restoreHandler = (e) => {\n    if (e.target.className !== 'history_item') return\n    let keywords = e.target.innerText\n    searchHandler(keywords)\n  }\n  const clearHistoryHandler = () => {\n    dispatch(clearHistory())\n  }\n\n  return (\n    <HistoryPanelWrapper>\n      {history.length === 0 ? (\n        <p>暂无搜索历史</p>\n      ) : (\n        <>\n          <div\n            className=\"history_items\"\n            onClick={restoreHandler}\n          >\n            {history.map((item, index) => (\n              <div\n                className=\"history_item\"\n                key={index}\n              >\n                {item}\n              </div>\n            ))}\n          </div>\n          <div className=\"history_handle\">\n            <div\n              className=\"clear_history\"\n              onClick={clearHistoryHandler}\n            >\n              <Icon name=\"garbage\" />\n              <span>清除历史</span>\n            </div>\n          </div>\n        </>\n      )}\n    </HistoryPanelWrapper>\n  )\n})\n\nconst HistoryPanelWrapper = styled.div`\n  width: min(800px, 100%);\n  & > p {\n    color: var(--font-gray-200);\n    font-size: 15px;\n    margin: 20px;\n    text-align: center;\n  }\n  .history_item,\n  .clear_history {\n    display: inline-block;\n    padding: 5px 7px;\n    background-color: var(--bg-gray-100);\n    margin: 10px;\n    color: var(--font-white-100);\n    border-radius: 6px;\n    font-size: 14px;\n    cursor: pointer;\n  }\n  .history_handle {\n    width: 100%;\n    height: 50px;\n  }\n  .clear_history {\n    float: right;\n    padding: 5px 10px;\n    font-size: 15px;\n    svg {\n      width: 14px;\n      height: 14px;\n      fill: var(--bg-white-100);\n      margin-right: 3px;\n    }\n  }\n`\n\nexport default HistoryPanel\n","import React, { useState, useRef, useEffect } from 'react'\nimport { useInViewport } from 'ahooks'\nimport styled, { keyframes } from 'styled-components'\n\nimport Icon from '@/components/common/IconSvg'\n\nconst ImageLazy = React.memo(({ src, iconame, root, ...props }) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [isError, setIsError] = useState(false)\n  const imageRef = useRef(null)\n  const [inViewport] = useInViewport(imageRef)\n  useEffect(() => {\n    if (inViewport) {\n      const img = imageRef.current\n      if (src !== '' && src !== undefined) {\n        img.src = src\n        // 从缓存中读出\n        img.complete && setIsLoading(false)\n      } else {\n        setIsError(true)\n      }\n    }\n  }, [inViewport, src])\n  return (\n    <ImageWrapper {...props}>\n      {/* 加载动画 */}\n      {isLoading && (\n        <div className=\"loading\">\n          <Motion isError={isError}>\n            <Icon name={iconame} />\n          </Motion>\n        </div>\n      )}\n      <img\n        ref={imageRef}\n        alt={iconame}\n        onLoad={() => {\n          setIsLoading(false)\n        }}\n        onError={() => {\n          setIsError(true)\n        }}\n      />\n    </ImageWrapper>\n  )\n})\n\nconst ImageWrapper = styled.div`\n  transform: scale(0.8);\n  width: 60px;\n  height: 60px;\n  border-radius: 10px;\n  border: 1px solid var(--bg-gray-100);\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  .loading {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    padding: 10px;\n    background-color: var(--bg-white-100);\n    box-sizing: border-box;\n    z-index: 1;\n  }\n  .icon {\n    width: 40px;\n    height: 40px;\n    transition: fill 0.2s;\n    fill: var(--bg-gray-100);\n  }\n  img,\n  .motion {\n    width: inherit;\n    height: inherit;\n  }\n`\nconst lodingAnimation = keyframes`\nfrom {\n  opacity: 1;\n}\nto {\n  opacity: 0.5;\n}\n`\nconst Motion = styled.div`\n  width: inherit;\n  height: inherit;\n  animation: ${lodingAnimation} 0.4s linear 0s infinite alternate-reverse;\n  animation-play-state: ${({ isError }) => (isError ? 'paused' : 'running')};\n`\n\nexport default ImageLazy\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport styled from 'styled-components'\nimport { useInViewport } from 'ahooks'\n\nimport { secondsToFormat } from '@/utils/time_parser'\n\nimport ImageLazy from '@/components/common/ImageLazy'\nimport { LoadAnimations } from '@/components/common/LazyLoad'\nimport { songPicAndUrl } from '@/store/upload.slice'\nimport { playPause } from '@/store/play.slice'\nimport { showToast } from '@/store/toast.slice'\n\nconst SongsDisplay = React.memo(({ songs, scrollToBottom }) => {\n  const quality = useSelector((state) => state.setting.quality)\n  const dispatch = useDispatch()\n\n  // 处理歌曲跳转操作(双击)\n  // 获取播放音频和图片链接\n  const getAudioAndPic = (e) => {\n    // 1. e.target 为 song_item 元素\n    if (\n      e.target.classList.contains('song_item') ||\n      e.target.parentElement.classList.contains('song_item')\n    ) {\n      dispatch(playPause(true))\n      let name, artist, id\n      if (e.target.classList.contains('song_item')) {\n        id = e.target.getAttribute('data')\n        ;[name, artist] = e.target.innerText.split('\\n')\n      } else {\n        id = e.target.parentElement.getAttribute('data')\n        ;[name, artist] = e.target.parentElement.innerText.split('\\n')\n      }\n      dispatch(showToast({ message: '正在尝试获取音频...' }))\n      dispatch(songPicAndUrl({ id, name, artist, br: quality }))\n        .then(() => {\n          dispatch(showToast({ message: '获取成功' }))\n        })\n        .catch(() => {\n          dispatch(showToast({ message: '未知错误，获取失败' }))\n        })\n    }\n  }\n\n  // 监听LoadingWrapper 是否可视，是的话加载更多数据\n  const [isLoading, setIsLoading] = useState(true)\n  const loadingAnimationRef = useRef(null)\n  const [inViewport, ratio] = useInViewport(loadingAnimationRef, {\n    threshold: [0, 0.25, 0.5, 0.75, 1],\n  })\n  const locked = useRef(false)\n  useEffect(() => {\n    if (inViewport && ratio === 1 && !locked.current) {\n      locked.current = true\n      scrollToBottom(({ loading }) => {\n        setIsLoading(loading)\n      })\n      setTimeout(() => {\n        locked.current = false\n      }, 5000)\n    }\n  }, [inViewport, ratio, scrollToBottom])\n\n  return (\n    <SongsResultWrapper>\n      {songs.length === 0 ? (\n        <p>找不到。。。换个词试试~</p>\n      ) : (\n        <>\n          {/* 展示 */}\n          <div\n            className=\"songitems\"\n            onDoubleClick={getAudioAndPic}\n          >\n            {songs.map((song) => {\n              return (\n                <SongItems\n                  key={song.id}\n                  {...song}\n                />\n              )\n            })}\n          </div>\n          {/* 底部数据加载动画 */}\n          {isLoading === true ? (\n            <LoadingWrapper ref={loadingAnimationRef}>\n              <LoadAnimations />\n            </LoadingWrapper>\n          ) : (\n            <></>\n          )}\n        </>\n      )}\n    </SongsResultWrapper>\n  )\n})\n\nfunction SongItems({ id, pic, name, artist, duration }) {\n  return (\n    <SongItemsWrapper\n      className=\"song_item\"\n      data={id}\n    >\n      {/* 图片懒加载 */}\n      <ImageLazy\n        className=\"record\"\n        src={pic}\n        iconame=\"record\"\n      />\n      <div\n        className=\"name\"\n        title={name}\n      >\n        {name}\n      </div>\n      <div\n        className=\"artist\"\n        artist={artist}\n      >\n        {artist}\n      </div>\n      <div\n        className=\"duration\"\n        duration={duration}\n      >\n        {secondsToFormat(duration / 1000, 0)}\n      </div>\n    </SongItemsWrapper>\n  )\n}\n\nconst SongsResultWrapper = styled.div`\n  margin-top: 20px;\n  & > p {\n    color: var(--font-gray-200);\n    font-size: 15px;\n    margin: 20px;\n    text-align: center;\n  }\n  .songitems {\n    width: 100%;\n  }\n`\nconst SongItemsWrapper = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 90px 2fr 1fr 1fr 60px;\n  grid-template-rows: 70px;\n  grid-template-areas: 'record name artist . duration';\n  align-items: center;\n  border-bottom: 1px solid var(--bg-gray-100);\n  cursor: pointer;\n  .record {\n    grid-area: record;\n  }\n  .name,\n  .artist,\n  .duration {\n    width: 100%;\n    color: var(--font-gray-100);\n    font-size: 14px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    letter-spacing: 2px;\n  }\n  .name {\n    grid-area: name;\n    font-size: 20px;\n    color: var(--bg-gray-200);\n  }\n  .artist {\n    grid-area: artist;\n  }\n  .duration {\n    grid-area: duration;\n  }\n`\nconst LoadingWrapper = styled.div`\n  width: 100%;\n  height: 70px;\n  position: relative;\n`\n\nexport default SongsDisplay\n","import React, { useCallback, useMemo, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useSearchParams } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport SongsDisplay from '@/components/SongsDisplay'\nimport { LoadAnimations } from '@/components/common/LazyLoad'\n\nconst SearchResult = React.memo(\n  ({ searchHandler, currentPageRef, isLoading, isError }) => {\n    const songs = useSelector((state) => state.search.songs)\n    // 去重\n    const songsItems = useMemo(() => {\n      const songIdsSet = new Set()\n      return songs.filter(({ id }) => {\n        if (songIdsSet.has(id)) {\n          return false\n        } else {\n          songIdsSet.add(id)\n          return true\n        }\n      })\n    }, [songs])\n    const [searchParams] = useSearchParams()\n    const scrollToBottom = useCallback(\n      (callback) => {\n        // 限制刷2页数据，二分估测大概率把暂时搞崩\n        if (currentPageRef.current < 2) {\n          const keywords = searchParams.get('keywords')\n          searchHandler(keywords, ++currentPageRef.current)\n        } else {\n          callback({ loading: false, isError: false })\n        }\n      },\n      [currentPageRef, searchHandler, searchParams]\n    )\n    // 切换关键词搜索的加载动画\n    const preKeywords = useRef('')\n    const equalKeywords = useMemo(() => {\n      let words = searchParams.get('keywords')\n      if (preKeywords.current !== words) {\n        preKeywords.current = words\n        return true && isLoading\n      } else {\n        return false\n      }\n    }, [isLoading, searchParams])\n    return (\n      <div>\n        {equalKeywords ? (\n          <LoadingWrapper>\n            <LoadAnimations />\n          </LoadingWrapper>\n        ) : (\n          <SongsDisplay\n            songs={songsItems}\n            scrollToBottom={scrollToBottom}\n          />\n        )}\n      </div>\n    )\n  }\n)\n\nconst LoadingWrapper = styled.div`\n  width: 100%;\n  height: 70px;\n  position: relative;\n`\n\nexport default SearchResult\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nimport { clearSongs } from '@/store/search.slice'\n\nimport SearchInput from './SearchInput'\nimport HistoryPanel from './HistoryPanel'\nimport SearchResult from './SearchResult'\n\nimport { pageVariant } from '@/variants'\nimport useSearchHandler from '@/hooks/useSearchHandler'\n\nconst SearchPage = () => {\n  const dispatch = useDispatch()\n  // 获取路由参数\n  const [searchParams, setSearchParams] = useSearchParams()\n  // 当前页\n  const currentPageRef = useRef(1)\n  // 获取音频\n  const { isLoading, isError, fetchSongs } = useSearchHandler()\n  // 搜索, 触发方式：1.键盘回车 2.点击搜索按钮 3.点击历史记录 4. 滚动到底部\n  const searchHandler = useCallback(\n    (keywords, page = 1) => {\n      if (keywords !== searchParams.get('keywords')) {\n        currentPageRef.current = 1\n        dispatch(clearSongs())\n      }\n      fetchSongs(keywords, page)\n      // 设置路由参数\n      setSearchParams((pre) => ({ ...pre, keywords }))\n    },\n    [setSearchParams, dispatch, searchParams, fetchSongs]\n  )\n  // 1. 挂载：监听初始路由参数。如果有参数，就搜索，否则就显示历史记录\n  useEffect(() => {\n    if (searchParams.get('keywords')) {\n      searchHandler(searchParams.get('keywords'))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <SearchPageWrapper\n      variants={pageVariant}\n      initial=\"enter\"\n      animate=\"show\"\n      transition=\"transition\"\n      exit=\"exit\"\n      key=\"searchPage\"\n    >\n      <SearchInput searchHandler={searchHandler} />\n      {searchParams.get('keywords') ? (\n        <SearchResult\n          searchHandler={searchHandler}\n          currentPageRef={currentPageRef}\n          isLoading={isLoading}\n          isError={isError}\n        />\n      ) : (\n        <HistoryPanel searchHandler={searchHandler} />\n      )}\n    </SearchPageWrapper>\n  )\n}\n\nconst SearchPageWrapper = styled(motion.div)`\n  width: 95%;\n  margin: 0 auto;\n`\n\nexport default SearchPage\n","import { useCallback, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { saveHistory, searchByKeywords, setSongsByCache, songPicByIds } from '@/store/search.slice'\n\nexport default function useSearchHandler() {\n  // 加载动画\n  const [[isLoading, isError], setLoadingState] = useState([true, false])\n  // 歌曲缓存\n  const songsCache = useSelector((state) => state.search.songsCache)\n  const dispatch = useDispatch()\n\n  /**\n   * 通过缓存或远程获取歌曲\n   */\n  const fetchSongs = useCallback((keywords, page) => {\n    setLoadingState([true, false])\n    if (songsCache[keywords] && songsCache[keywords][page]) {\n      // 歌曲缓存中获取歌曲列表\n      let songs = []\n      for (let i = 1; i <= page; i++) {\n        songs = [...songs, ...songsCache[keywords][i]]\n      }\n      dispatch(setSongsByCache(songs))\n      setLoadingState([false, false])\n    } else {\n      // 保存历史记录\n      dispatch(saveHistory({ keywords }))\n      // 通过接口获取歌曲列表\n      dispatch(searchByKeywords({ keywords, offset: (page - 1) * 30 })).then(\n        ({ payload }) => {\n          const songs = (payload && payload.songs) || []\n          if (songs.length > 0) {\n            dispatch(\n              songPicByIds({\n                ids: songs.map((song) => song.id).join(','),\n                keywords,\n                offset: (page - 1) * 30,\n              })\n            ).then(() => {\n              setLoadingState([false, false])\n            })\n          } else {\n            setLoadingState([false, true])\n          }\n        }\n      )\n    }\n  }, [dispatch, songsCache])\n\n  return { isLoading, isError, fetchSongs }\n}","import React, { useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nimport Image from '@/components/common/Image'\nimport Icon from '@/components/common/IconSvg'\n\nimport { logout } from '@/store/user.slice'\nimport { playPause } from '@/store/play.slice'\nimport { setBaseUrl, setMusicQuality } from '@/store/setting.slice'\nimport { setAnimationTime } from '@/store/setting.slice'\nimport { showToast } from '@/store/toast.slice'\nimport { testUrl, cancelAllPendingRequests } from '@/apis'\n\nimport { pageVariant } from '@/variants'\n\nimport { qualityItems } from '@/configs/default'\n\nconst SettingsPage = () => {\n  useEffect(() => {\n    return () => {\n      cancelAllPendingRequests()\n    }\n  }, [])\n  // 获取用户信息\n  const { profile, quality, baseUrl, animationTime } = useSelector((state) => ({\n    ...state.user,\n    ...state.setting,\n  }))\n  const { nickname, avatarUrl } = profile\n  const dispatch = useDispatch()\n  // 退出登录\n  const logoutHandler = () => {\n    dispatch(playPause(true))\n    dispatch(logout())\n  }\n  // 音质选择\n  const selectQuality = (e) => {\n    dispatch(setMusicQuality(e.target.value))\n  }\n  // 接口测试\n  const apiRef = useRef()\n  const testApi = () => {\n    let url = apiRef.current.value\n    if (/^https?:\\/\\//.test(url)) {\n      // 测试接口\n      testUrl(url)\n        .then(() => {\n          dispatch(setBaseUrl(url))\n          apiRef.current.value = ''\n          // toast 提示\n          dispatch(showToast({ message: '接口测试成功' }))\n        })\n        .catch((e) => {\n          // toast 提示\n          dispatch(showToast({ message: '接口测试失败' }))\n        })\n    }\n  }\n  const resetApi = () => {\n    dispatch(setBaseUrl('https://cplay-api.vercel.app'))\n    apiRef.current.value = ''\n  }\n  // 设置 滚动动画\n  const aniamtionRef = useRef()\n  const AnimationTime = () => {\n    let time = aniamtionRef.current.value\n    if (time === '') return\n    if (200 <= +time && +time <= 800) {\n      dispatch(setAnimationTime(time))\n      aniamtionRef.current.value = ''\n      dispatch(showToast({ message: '设置成功' }))\n    } else {\n      dispatch(showToast({ message: '超出范围200~800(ms)' }))\n    }\n  }\n  const resetAnimationTime = () => {\n    dispatch(setAnimationTime(300))\n    aniamtionRef.current.value = ''\n  }\n  return (\n    <SettingsWrapper\n      variants={pageVariant}\n      initial=\"enter\"\n      animate=\"show\"\n      transition=\"transition\"\n      exit=\"exit\"\n      key=\"settings\"\n    >\n      {/* 退出登录 */}\n      <Logout>\n        {/* 头像 */}\n        <div className=\"avatar\">\n          <Image\n            src={avatarUrl}\n            iconame=\"user\"\n            className=\"user_avatar\"\n          />\n        </div>\n        {/* 昵称 */}\n        <div className=\"nickname\">{nickname}</div>\n        {/* 登出按钮 */}\n        <div\n          className=\"logout\"\n          onClick={logoutHandler}\n        >\n          <div className=\"logout_svg\">\n            <Icon name=\"logout\" />\n          </div>\n          登出\n        </div>\n      </Logout>\n      {/* 音质设置 */}\n      <SoundQuality>\n        <h2>音质设置</h2>\n        <div className=\"setting_item\">\n          <select\n            name=\"quality\"\n            onChange={selectQuality}\n            defaultValue={quality}\n          >\n            {qualityItems.map((item) => (\n              <option\n                key={item.id}\n                value={item.value}\n              >\n                {item.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </SoundQuality>\n      {/* 自定义后台接口 */}\n      <CustomApi>\n        <h2>自定义后台接口</h2>\n        <div className=\"setting_item\">\n          <input\n            type=\"text\"\n            placeholder={baseUrl}\n            ref={apiRef}\n          />\n          <button onClick={testApi}>测试</button>\n          <button onClick={resetApi}>重置</button>\n        </div>\n      </CustomApi>\n      {/* 滚动动画 */}\n      <AnimationWrapper>\n        <h2>歌词滚动动画时间</h2>\n        <div className=\"setting_item\">\n          <input\n            type=\"number\"\n            placeholder={animationTime}\n            ref={aniamtionRef}\n          />\n          <button onClick={AnimationTime}>设置</button>\n          <button onClick={resetAnimationTime}>重置</button>\n        </div>\n      </AnimationWrapper>\n    </SettingsWrapper>\n  )\n}\n\nconst SettingsWrapper = styled(motion.div)`\n  width: 95%;\n  margin: 0 auto;\n  padding-top: 20px;\n`\nconst Logout = styled.div`\n  background: var(--bg-gray-210);\n  border-radius: 20px;\n  display: grid;\n  align-items: center;\n  height: 100px;\n  color: var(--font-gray-200);\n  grid-template-columns: 130px 100px 1fr 120px;\n  .avatar {\n    width: 80px;\n    height: 80px;\n    margin-left: 20px;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n  }\n  .user_avatar {\n    width: 100%;\n    height: 100%;\n    transform: scale(1);\n    border: none;\n\n    .icon {\n      width: inherit;\n      height: inherit;\n      fill: var(--bg-gray-100);\n    }\n  }\n  .nickname {\n    font-size: 32px;\n    font-weight: bold;\n  }\n  .logout {\n    grid-column: 4;\n    height: 36px;\n    line-height: 38px;\n    cursor: pointer;\n    width: 90px;\n    transition: all 0.3s;\n    border-radius: 8px;\n    .logout_svg {\n      float: left;\n      margin: 0 10px;\n      width: 24px;\n      height: 36px;\n      svg {\n        width: inherit;\n        height: inherit;\n        fill: var(--bg-gray-100);\n        transition: all 0.3s;\n      }\n    }\n    &:hover {\n      background-color: var(--bg-gray-210);\n      color: var(--font-red-100);\n      svg {\n        fill: var(--font-red-100);\n      }\n    }\n  }\n`\nconst SettingItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 80px;\n  font-size: 20px;\n  font-weight: bold;\n  color: var(--font-gray-200);\n  h2 {\n    margin-left: 10px;\n  }\n  .setting_item {\n    height: 50px;\n    line-height: 50px;\n    margin-right: 10px;\n    color: var(--font-gray-200);\n    border-radius: 12px;\n    overflow: hidden;\n    font-size: 14px;\n  }\n`\nconst SoundQuality = styled(SettingItem)`\n  margin-top: 20px;\n  .setting_item {\n    background: var(--bg-gray-210);\n  }\n  select {\n    width: 160px;\n    height: inherit;\n    border: none;\n    outline: none;\n    appearance: none;\n    color: inherit;\n    background: transparent;\n  }\n  option {\n    text-align: center;\n  }\n`\nconst CustomApi = styled(SettingItem)`\n  .setting_item {\n    display: flex;\n  }\n  input {\n    height: inherit;\n    padding: 0 10px;\n    width: 300px;\n    min-width: 150px;\n    background: var(--bg-gray-210);\n  }\n  button {\n    height: inherit;\n    padding: 0 24px;\n    cursor: pointer;\n    border-left: 1px solid var(--bg-gray-100);\n    background: var(--bg-gray-210);\n    transition: all 0.1s;\n    &:hover {\n      opacity: 0.8;\n    }\n    &:active {\n      opacity: 1;\n    }\n  }\n`\nconst AnimationWrapper = styled(CustomApi)`\n  input {\n    width: 150px;\n    min-width: 100px;\n    appearance: textfield;\n  }\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    appearance: none;\n    margin: 0;\n  }\n`\nexport default SettingsPage\n"],"names":["CloudPageWrapper","styled","motion","variants","pageVariant","initial","animate","transition","exit","HistoryPageWrapper","LoginQR","React","useSelector","state","user","key","qrimg","code","verify","dispatch","useDispatch","navigate","useNavigate","useEffect","createQrKey","checkRef","useRef","useState","hintFresh","setHintFresh","setCycleCheck","useCallback","duration","lock","id","setInterval","checkQrCode","then","payload","cookie","getUserInfo","setTimeout","clearInterval","current","LoginQRWrapper","className","onClick","LoadingQR","name","src","alt","circle","keyframes","SearchInput","searchHandler","useSearchParams","searchParams","keywordsRef","useKeyPress","value","target","SearchInputWrapper","type","maxLength","placeholder","defaultValue","get","ref","clean","HistoryPanel","history","search","HistoryPanelWrapper","length","e","keywords","innerText","map","item","index","clearHistory","ImageLazy","iconame","props","root","isLoading","setIsLoading","isError","setIsError","imageRef","useInViewport","inViewport","img","undefined","complete","ImageWrapper","Motion","onLoad","onError","lodingAnimation","SongsDisplay","songs","scrollToBottom","quality","setting","loadingAnimationRef","threshold","ratio","locked","loading","SongsResultWrapper","onDoubleClick","classList","contains","parentElement","artist","playPause","getAttribute","split","showToast","message","songPicAndUrl","br","catch","song","SongItems","LoadingWrapper","pic","SongItemsWrapper","data","title","secondsToFormat","SearchResult","currentPageRef","songsItems","useMemo","songIdsSet","Set","filter","has","add","callback","preKeywords","equalKeywords","words","SearchPageWrapper","setSearchParams","setLoadingState","songsCache","fetchSongs","page","i","setSongsByCache","saveHistory","searchByKeywords","offset","songPicByIds","ids","join","useSearchHandler","clearSongs","pre","SettingsWrapper","Logout","SettingItem","SoundQuality","CustomApi","AnimationWrapper","cancelAllPendingRequests","profile","baseUrl","animationTime","nickname","avatarUrl","apiRef","aniamtionRef","logout","onChange","setMusicQuality","qualityItems","url","test","testUrl","setBaseUrl","time","setAnimationTime"],"sourceRoot":""}